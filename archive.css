/* Practice showing how to lay out a grid using columns and rows ------------------------------------------------- */

#content {
    display: grid;
    max-width: 960px;
    margin: 0 auto;
    
    /* PERCENT BASED LAYOUT */
    /* grid-template-columns: 33.3% 33.3% 33.3%; */
    
    /* FRACTIONAL LAYOUT */
    /* grid-template-columns: 1fr 1fr 1fr; */
    
    /* USING REPEAT FOR LAYOUT */
    grid-template-columns: repeat(3, 1fr); 

    /* We can use MINMAX with auto-rows to set the min and max height for rows */
    /* grid-auto-rows: minmax(200px, auto); */
    
    /* We can use grid-template-ROWS (with repeat) just like columns */
    /* grid-template-rows: 200px 300px 400px 200px; */
    grid-auto-rows: minmax(150px, auto);

    /* MARGIN IN BETWEEN GRID CHILDREN */
    /* grid-column-gap: 10px;
    grid-row-gap: 10px; */
    grid-gap: 10px;
}

#content div {
    background: #3bbced;
    padding: 30px;
}

#content div:nth-child(even) {
    background: #777;
}

/* #content {
    grid-template-columns: repeat(6, 1fr); 
    grid-template-rows: repeat(4, minmax(150px, auto));
}

.one {
    grid-column-start: 3;
    grid-column-end: 1;
    grid-column: 1/3; START / END condition
}

.two {
    grid-column: 3/7;
}

.three {
    grid-column: 1/4;
    grid-row: 2/4;
}

.four {
    grid-column: 4/7;
    grid-row: 2/4;
}

.five {
    grid-column: 3/7;
}

.six {
    grid-column: 1/3;
    grid-row: 4;
} */

/* Practice nesting a grid in a grid ----------------------------------------------------------------------------------------------------------------------------- */

/* .nested {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 10px;
    you can use span to specify how far the element should span
    grid-column: span 3;
}

.nested p {
    border: 1px solid #fff;
    padding: 20px;
    margin: 0;
} */

/* Practice with justifying and aligning -------------------------------------------------------------------------------------------------------------------------------- */

/* default align (vertical) is STRETCH */
/* align-items: end; */

/* default justify (horizontal) is STRETCH */
/* justify-items: start; */

.one {
    justify-self: end;
    align-self: end;
}

.two {
    justify-self: center;
    align-self: center;
}

.three {
    justify-self: start;
    align-self: start;
}
